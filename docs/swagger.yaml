definitions:
  AuthenticateRequest:
    properties:
      password:
        type: string
      usernameOrEmailAddress:
        type: string
    required:
    - password
    - usernameOrEmailAddress
    type: object
  AuthenticateResult:
    properties:
      accessToken:
        type: string
      expireInSeconds:
        type: integer
      refreshToken:
        type: string
      refreshTokenExpireInSeconds:
        type: integer
    type: object
  CreateOrEditUserDto:
    properties:
      email:
        maxLength: 256
        type: string
      firstName:
        maxLength: 64
        minLength: 3
        type: string
      id:
        type: integer
      lastName:
        maxLength: 64
        minLength: 3
        type: string
      password:
        type: string
      roleIds:
        items:
          type: integer
        type: array
      userName:
        maxLength: 256
        minLength: 8
        type: string
    required:
    - email
    - firstName
    - lastName
    - userName
    type: object
  CreateUserDto:
    properties:
      email:
        maxLength: 256
        type: string
      firstName:
        maxLength: 64
        minLength: 3
        type: string
      id:
        type: integer
      lastName:
        maxLength: 64
        minLength: 3
        type: string
      password:
        type: string
      roleIds:
        items:
          type: integer
        type: array
      userName:
        maxLength: 256
        minLength: 8
        type: string
    required:
    - email
    - firstName
    - lastName
    - userName
    type: object
  EditUserDto:
    properties:
      email:
        maxLength: 256
        type: string
      firstName:
        maxLength: 64
        minLength: 3
        type: string
      id:
        type: integer
      lastName:
        maxLength: 64
        minLength: 3
        type: string
      password:
        type: string
      roleIds:
        items:
          type: integer
        type: array
      userName:
        maxLength: 256
        minLength: 8
        type: string
    required:
    - email
    - firstName
    - lastName
    - userName
    type: object
  GetUserByIdResult:
    properties:
      user:
        $ref: '#/definitions/CreateOrEditUserDto'
    type: object
  GetUsersResult:
    properties:
      items:
        items:
          $ref: '#/definitions/UserDto'
        type: array
      totalCount:
        type: integer
    type: object
  RefreshTokenRequest:
    properties:
      token:
        minLength: 10
        type: string
    required:
    - token
    type: object
  RefreshTokenResult:
    properties:
      accessToken:
        type: string
      expireInSeconds:
        type: integer
    type: object
  UserDto:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      userName:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/accounts/authenticate:
    post:
      consumes:
      - application/json
      description: Authenticate
      parameters:
      - description: AuthenticateRequest
        in: body
        name: AuthenticateRequest
        required: true
        schema:
          $ref: '#/definitions/AuthenticateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthenticateResult'
      security:
      - ApiKeyAuth: []
      summary: Authenticate
      tags:
      - Accounts
  /api/v1/accounts/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh access token
      parameters:
      - description: RefreshTokenRequest
        in: body
        name: RefreshTokenRequest
        required: true
        schema:
          $ref: '#/definitions/RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RefreshTokenResult'
      security:
      - ApiKeyAuth: []
      summary: Refresh access token
      tags:
      - Accounts
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: CreateUserDto
        in: body
        name: CreateUserDto
        schema:
          $ref: '#/definitions/CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserDto'
      security:
      - ApiKeyAuth: []
      summary: Create new user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: EditUserDto
        in: body
        name: EditUserDto
        schema:
          $ref: '#/definitions/EditUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserDto'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - Users
  /api/v1/user/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetUserByIdResult'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - Users
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - in: query
        name: filters
        type: string
      - in: query
        name: maxResultCount
        type: integer
      - in: query
        name: skipCount
        type: integer
      - in: query
        name: sorting
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetUsersResult'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
